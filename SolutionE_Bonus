#include <iostream>
#include <string>

string removeDigit(const string& number) {
    string largest = number;

    for (int i = 0; i < number.length(); ++i) {
        string current = number.substr(0, i) + number.substr(i + 1);
        if (current > largest) {
            largest = current;
        }
    }

    return largest;
}

int main() {
    string numbers[] = {"1234", "2945", "9273", "3954", "19374"};

    for (const std::string& number : numbers) {
       string largest_number = removeDigit(number);
        cout << largest_number <<endl;
    }

    return 0;
}
/* Brute force: would try every possible combination of removing digits from the number and then compare the resulting numbers to find the largest. This would be very inefficient, especially for large numbers.
Greedy algorithm: This code iterates through each digit in the number and removes it temporarily. It then compares the remaining string to the current "largest" found and updates the "largest" if necessary. This approach makes locally optimal choices at each step (removing the digit that results in the highest immediate number) */
